name: Deploy to EKS
on:
  push:
    branches: [ "main" ]
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  EKS_CLUSTER: ${{ secrets.EKS_CLUSTER_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure kubectl
        run: |
          aws eks get-token --cluster-name ${{ env.EKS_CLUSTER }} > token.txt
          aws eks update-kubeconfig \
            --name ${{ env.EKS_CLUSTER }} \
            --region ${{ env.AWS_REGION }} \
            --role-arn arn:aws:iam::533267375935:role/eksctl-my-eks-cluster-cluster-ServiceRole-IDaJIBRRE9ny
          
          # Verify kubectl configuration
          kubectl config current-context
          kubectl cluster-info

      - name: Replace AWS Account ID in manifests
        run: |
          find k8s -type f -name "*.yaml" -exec sed -i "s/ACCOUNT_ID/${{ env.AWS_ACCOUNT_ID }}/g" {} +

      - name: Deploy to EKS
        run: |
          # First verify cluster access
          kubectl get nodes
          
          # Then proceed with deployments
          kubectl apply -f k8s/redis/ebs-sc.yaml --validate=false
          kubectl apply -f k8s/redis/redis-pvc.yaml --validate=false
          kubectl apply -f k8s/redis/redis-deployment.yaml --validate=false
          kubectl apply -f k8s/redis/redis-service.yaml --validate=false
          
          kubectl apply -f k8s/backend/ --validate=false
          kubectl apply -f k8s/frontend/ --validate=false
          
          kubectl apply -f k8s/ingress/frontend-ingress.yaml --validate=false
          
          # Verify deployments
          kubectl rollout status deployment/redis -n default
          kubectl rollout status deployment/backend -n default
          kubectl rollout status deployment/frontend -n default